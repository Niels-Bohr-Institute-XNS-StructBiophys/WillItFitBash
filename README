WillItFitBash was developed for a project with NovoNordisk by Nicolas Skar-Gislinge, Asger Sand and Martin Schmiele.

WillItFitBash is actually a stupid name, it runs also in other shells.

WillItFitBash is intended to run WIF in the command line ie w/o the GUI. For NovoNordisk the software was generalized, allowing to treat a protein modification (identified by its 3-letter residue name in a PDB) in a protein differently than the rest. For example to scale the displaced solvent volume of a polymer chain or a bile acid residue differently.

The original WillItFit software form sourceforge can also be run on the command line, in theory. In praxis, when using a model with a PDB structure, it will usually core dump, when running exactly the same call in a command line as it is generated by the GUI (the original WIF python script). The reason for that is unknown. It is very strange that if one starts the same command from a GUI, the executable will run flawlessly, but when the same command is executed in a terminal with the same executable, it will core-dump.  

Maybe the sscanf commands (which are in general not very safe to use) in the ImportPDBFile.h routine are the reason. These were replaced in the corresponding WillItFitBash routines and this solved the problem. 

WillItFitBash provides the user also a better logging by writing a logfile.log for each fit. This allows easier debugging and one can easier track the fittting (especially when using the LM alg.).
WillItFitBash has still the alternative fitting algorithms installed, while the original WIF can use meanwhile only the LM alg.

Since WillItFitBash can be run w/o GUI, it can be used for batch-processing, ie fitting fx 100 different PDBs, generated in a MD simulation, to a set of SAS data.

This can be realized in many ways, for example by a python or bash script.

An example with a Python script is given below:

The script WIFBash.py will fit with the selected model (here we used MembraneProteinInNanodisc) all PDB files found under WillItFitBash/Data/ to the SAXS data (GHR_NDSAXSbest.chi) using the fit parameter file (best_fitAB.par) and the dat-file GHR_MSP1D1POPC.dat (molecular volumes, SLDs; for the protein modification residue name use XXX, ie 3-letter string that does not match any residue in the PDB).

Notes: The parameter file must match the model selected in ModelLocation.h and WillItFitBash needs to be recompiled when selecting a new model.

The script will later make a copy of a template card-file (GHR_ND.card) to give each fit / pdb-file a unique card-file:

AA_frame1527_aligned.pdb -> AA_frame1527_aligned-GHR_ND.card
AA_frame2537_aligned.pdb -> AA_frame2537_aligned-GHR_ND.card
AA_frame3597_aligned.pdb -> AA_frame3597_aligned-GHR_ND.card
AA_frame4285_aligned.pdb -> AA_frame4285_aligned-GHR_ND.card


Other parameters for WIFBash (Q-range, fit alg., ...) can be found and changed in the python script.

The script was run with residue-level based computations and all-atom based computations. Results can be found under Data_All_Atom/ and Data_Residue/.


Notes:
The ReadAtomsAsResidues flag in the WIFBash.py script controls if the ImportPDBFile.h routine treats each atom as a residue or, as in the orginal WIF, reads the PDB residue-based and averages the atoms within one amino acid.



Installation notes
------------------

get source code from https://github.com/Niels-Bohr-Institute-XNS-StructBiophys/WillItFitBash by:
git clone https://github.com/Niels-Bohr-Institute-XNS-StructBiophys/WillItFitBash


Select model
------------
by relative path with #include statement in C/Auxillary/ModelLocation.h
e.g.
#include "../Models/MembraneProteinInNanodisc/ModelInfo.h"

Compilation
-----------
Use system's standard GSL
	for models with PDB structures libgsl-dev and libgsl2 need to installed and used in the compilation
	gcc WillItFit.c -O3 -fopenmp -g -Wall -o WillItFit.com -lm -lgsl -lgslcblas
	
	for models w/o PDB structures GSL might be not necessary
	gcc WillItFit.c -O3 -fopenmp -g -Wall -o WillItFit.com -lm


Notes:
	If you want/need to use a user-supplied GSL, built under $PATHTOGSL/gsl-2.4/build/, use
	gcc WillItFit.c -O3 -fopenmp -g -Wall -o WillItFit.com -L$PATHTOGSL/gsl-2.4/build/lib/ -I$PATHTOGSL/gsl-2.4/build/include/ -lm -lgsl -lgslcblas -Wl,-rpath,"$PATHTOGSL/gsl-2.4/build/lib/"
	
	e.g.
	gcc WillItFit.c -O3 -fopenmp -g -Wall -o WillItFit.com -L/home/msmile/Seafile/MartinS/software/gsl-2.4/build/lib/ -I/home/msmile/Seafile/MartinS/software/gsl-2.4/build/include/ -lm -lgsl -lgslcblas -Wl,-rpath,"/home/msmile/Seafile/MartinS/software/gsl-2.4/build/lib/"


